-- Creación de la base de datos
CREATE DATABASE GestionReservas;
GO

USE GestionReservas;

-- Tabla de Salas
CREATE TABLE Salas (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    Nombre NVARCHAR(100) NOT NULL,
    Capacidad INT NOT NULL,
    Disponibilidad BIT NOT NULL
);

-- Tabla de Reservas
CREATE TABLE Reservas (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    SalaID INT NOT NULL FOREIGN KEY REFERENCES Salas(ID),
    FechaReserva DATE NOT NULL,
    Usuario NVARCHAR(100) NOT NULL
);

-- Procedimientos Almacenados para Salas
CREATE PROCEDURE spGetSalas AS BEGIN
    SELECT * FROM Salas;
END;

CREATE PROCEDURE spAddSala (@Nombre NVARCHAR(100), @Capacidad INT, @Disponibilidad BIT) AS BEGIN
    INSERT INTO Salas (Nombre, Capacidad, Disponibilidad)
    VALUES (@Nombre, @Capacidad, @Disponibilidad);
END;

CREATE PROCEDURE spUpdateSala (@ID INT, @Nombre NVARCHAR(100), @Capacidad INT, @Disponibilidad BIT) AS BEGIN
    UPDATE Salas
    SET Nombre = @Nombre, Capacidad = @Capacidad, Disponibilidad = @Disponibilidad
    WHERE ID = @ID;
END;

CREATE PROCEDURE spDeleteSala (@ID INT) AS BEGIN
    DELETE FROM Salas WHERE ID = @ID;
END;

-- Procedimientos Almacenados para Reservas
CREATE PROCEDURE spGetReservas (@FechaInicio DATE, @FechaFin DATE, @SalaID INT = NULL) AS BEGIN
    SELECT * FROM Reservas
    WHERE (SalaID = @SalaID OR @SalaID IS NULL)
    AND FechaReserva BETWEEN @FechaInicio AND @FechaFin;
END;

CREATE PROCEDURE spAddReserva (@SalaID INT, @FechaReserva DATE, @Usuario NVARCHAR(100)) AS BEGIN
    IF EXISTS (
        SELECT 1 FROM Reservas WHERE SalaID = @SalaID AND FechaReserva = @FechaReserva
    )
        THROW 50001, 'La sala ya está reservada para esta fecha.', 1;
    ELSE
        INSERT INTO Reservas (SalaID, FechaReserva, Usuario)
        VALUES (@SalaID, @FechaReserva, @Usuario);
END;

CREATE PROCEDURE spDeleteReserva (@ID INT) AS BEGIN
    DELETE FROM Reservas WHERE ID = @ID;
END;